package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 22 18:24:05 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobType_Hdr_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        JobTypeHdrId,
        BusinessUnitId,
        BusinessUnitName,
        Status,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        JobTypeCode,
        JobTypeName,
        JobType_Dtl_EO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    @Override
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }



    public static final int JOBTYPEHDRID = AttributesEnum.JobTypeHdrId.index();
    public static final int BUSINESSUNITID = AttributesEnum.BusinessUnitId.index();
    public static final int BUSINESSUNITNAME = AttributesEnum.BusinessUnitName.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int JOBTYPECODE = AttributesEnum.JobTypeCode.index();
    public static final int JOBTYPENAME = AttributesEnum.JobTypeName.index();
    public static final int JOBTYPE_DTL_EO = AttributesEnum.JobType_Dtl_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobType_Hdr_EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.JobType_Hdr_EO");
    }


    /**
     * Gets the attribute value for JobTypeHdrId, using the alias name JobTypeHdrId.
     * @return the value of JobTypeHdrId
     */
    public BigDecimal getJobTypeHdrId() {
        return (BigDecimal) getAttributeInternal(JOBTYPEHDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTypeHdrId.
     * @param value value to set the JobTypeHdrId
     */
    public void setJobTypeHdrId(BigDecimal value) {
        setAttributeInternal(JOBTYPEHDRID, value);
    }

    /**
     * Gets the attribute value for BusinessUnitId, using the alias name BusinessUnitId.
     * @return the value of BusinessUnitId
     */
    public BigDecimal getBusinessUnitId() {
        return (BigDecimal) getAttributeInternal(BUSINESSUNITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnitId.
     * @param value value to set the BusinessUnitId
     */
    public void setBusinessUnitId(BigDecimal value) {
        setAttributeInternal(BUSINESSUNITID, value);
    }

    /**
     * Gets the attribute value for BusinessUnitName, using the alias name BusinessUnitName.
     * @return the value of BusinessUnitName
     */
    public String getBusinessUnitName() {
        return (String) getAttributeInternal(BUSINESSUNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnitName.
     * @param value value to set the BusinessUnitName
     */
    public void setBusinessUnitName(String value) {
        setAttributeInternal(BUSINESSUNITNAME, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }


    /**
     * Gets the attribute value for JobTypeCode, using the alias name JobTypeCode.
     * @return the value of JobTypeCode
     */
    public String getJobTypeCode() {
        return (String) getAttributeInternal(JOBTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTypeCode.
     * @param value value to set the JobTypeCode
     */
    public void setJobTypeCode(String value) {
        setAttributeInternal(JOBTYPECODE, value);
    }

    /**
     * Gets the attribute value for JobTypeName, using the alias name JobTypeName.
     * @return the value of JobTypeName
     */
    public String getJobTypeName() {
        return (String) getAttributeInternal(JOBTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTypeName.
     * @param value value to set the JobTypeName
     */
    public void setJobTypeName(String value) {
        setAttributeInternal(JOBTYPENAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getJobType_Dtl_EO() {
        return (RowIterator) getAttributeInternal(JOBTYPE_DTL_EO);
    }


    /**
     * @param jobTypeHdrId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal jobTypeHdrId) {
        return new Key(new Object[] { jobTypeHdrId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        SequenceImpl seq = new SequenceImpl("XXSC_JOB_TYPE_HDR_S", this.getDBTransaction());
               this.setJobTypeHdrId(seq.getSequenceNumber().bigDecimalValue());
        
        super.create(attributeList);
    }
}

