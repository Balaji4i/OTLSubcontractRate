package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 22 19:19:57 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Subcon_Rate_Dtl_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        SubconRateDtlId,
        SubconRateHdrId,
        EmployeeId,
        EmployeeName,
        EmployeeNumber,
        RegularRate,
        OverTimeUnitRate,
        IncentiveUnitRate,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        ActiveYn,
        NoOfDays,
        TotalIncentiveHours,
        TotalOvertimeHours,
        Amount,
        Bill,
        Netamount,
        Subcon_Rate_Hdr_EO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    @Override
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }


    public static final int SUBCONRATEDTLID = AttributesEnum.SubconRateDtlId.index();
    public static final int SUBCONRATEHDRID = AttributesEnum.SubconRateHdrId.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int EMPLOYEENAME = AttributesEnum.EmployeeName.index();
    public static final int EMPLOYEENUMBER = AttributesEnum.EmployeeNumber.index();
    public static final int REGULARRATE = AttributesEnum.RegularRate.index();
    public static final int OVERTIMEUNITRATE = AttributesEnum.OverTimeUnitRate.index();
    public static final int INCENTIVEUNITRATE = AttributesEnum.IncentiveUnitRate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int NOOFDAYS = AttributesEnum.NoOfDays.index();
    public static final int TOTALINCENTIVEHOURS = AttributesEnum.TotalIncentiveHours.index();
    public static final int TOTALOVERTIMEHOURS = AttributesEnum.TotalOvertimeHours.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int BILL = AttributesEnum.Bill.index();
    public static final int NETAMOUNT = AttributesEnum.Netamount.index();
    public static final int SUBCON_RATE_HDR_EO = AttributesEnum.Subcon_Rate_Hdr_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Subcon_Rate_Dtl_EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.Subcon_Rate_Dtl_EO");
    }


    /**
     * Gets the attribute value for SubconRateDtlId, using the alias name SubconRateDtlId.
     * @return the value of SubconRateDtlId
     */
    public BigDecimal getSubconRateDtlId() {
        return (BigDecimal) getAttributeInternal(SUBCONRATEDTLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubconRateDtlId.
     * @param value value to set the SubconRateDtlId
     */
    public void setSubconRateDtlId(BigDecimal value) {
        setAttributeInternal(SUBCONRATEDTLID, value);
    }

    /**
     * Gets the attribute value for SubconRateHdrId, using the alias name SubconRateHdrId.
     * @return the value of SubconRateHdrId
     */
    public BigDecimal getSubconRateHdrId() {
        return (BigDecimal) getAttributeInternal(SUBCONRATEHDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubconRateHdrId.
     * @param value value to set the SubconRateHdrId
     */
    public void setSubconRateHdrId(BigDecimal value) {
        setAttributeInternal(SUBCONRATEHDRID, value);
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public BigDecimal getEmployeeId() {
        return (BigDecimal) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(BigDecimal value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for EmployeeName, using the alias name EmployeeName.
     * @return the value of EmployeeName
     */
    public String getEmployeeName() {
        return (String) getAttributeInternal(EMPLOYEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeName.
     * @param value value to set the EmployeeName
     */
    public void setEmployeeName(String value) {
        setAttributeInternal(EMPLOYEENAME, value);
    }

    /**
     * Gets the attribute value for EmployeeNumber, using the alias name EmployeeNumber.
     * @return the value of EmployeeNumber
     */
    public String getEmployeeNumber() {
        return (String) getAttributeInternal(EMPLOYEENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeNumber.
     * @param value value to set the EmployeeNumber
     */
    public void setEmployeeNumber(String value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**
     * Gets the attribute value for RegularRate, using the alias name RegularRate.
     * @return the value of RegularRate
     */
    public BigDecimal getRegularRate() {
        return (BigDecimal) getAttributeInternal(REGULARRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegularRate.
     * @param value value to set the RegularRate
     */
    public void setRegularRate(BigDecimal value) {
        setAttributeInternal(REGULARRATE, value);
    }

    /**
     * Gets the attribute value for OverTimeUnitRate, using the alias name OverTimeUnitRate.
     * @return the value of OverTimeUnitRate
     */
    public BigDecimal getOverTimeUnitRate() {
        return (BigDecimal) getAttributeInternal(OVERTIMEUNITRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OverTimeUnitRate.
     * @param value value to set the OverTimeUnitRate
     */
    public void setOverTimeUnitRate(BigDecimal value) {
        setAttributeInternal(OVERTIMEUNITRATE, value);
    }

    /**
     * Gets the attribute value for IncentiveUnitRate, using the alias name IncentiveUnitRate.
     * @return the value of IncentiveUnitRate
     */
    public BigDecimal getIncentiveUnitRate() {
        return (BigDecimal) getAttributeInternal(INCENTIVEUNITRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IncentiveUnitRate.
     * @param value value to set the IncentiveUnitRate
     */
    public void setIncentiveUnitRate(BigDecimal value) {
        setAttributeInternal(INCENTIVEUNITRATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }


    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the value of ActiveYn
     */
    public String getActiveYn() {
        return (String) getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for NoOfDays, using the alias name NoOfDays.
     * @return the value of NoOfDays
     */
    public BigDecimal getNoOfDays() {
        return (BigDecimal) getAttributeInternal(NOOFDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfDays.
     * @param value value to set the NoOfDays
     */
    public void setNoOfDays(BigDecimal value) {
        setAttributeInternal(NOOFDAYS, value);
    }

    /**
     * Gets the attribute value for TotalIncentiveHours, using the alias name TotalIncentiveHours.
     * @return the value of TotalIncentiveHours
     */
    public BigDecimal getTotalIncentiveHours() {
        return (BigDecimal) getAttributeInternal(TOTALINCENTIVEHOURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalIncentiveHours.
     * @param value value to set the TotalIncentiveHours
     */
    public void setTotalIncentiveHours(BigDecimal value) {
        setAttributeInternal(TOTALINCENTIVEHOURS, value);
    }

    /**
     * Gets the attribute value for TotalOvertimeHours, using the alias name TotalOvertimeHours.
     * @return the value of TotalOvertimeHours
     */
    public BigDecimal getTotalOvertimeHours() {
        return (BigDecimal) getAttributeInternal(TOTALOVERTIMEHOURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalOvertimeHours.
     * @param value value to set the TotalOvertimeHours
     */
    public void setTotalOvertimeHours(BigDecimal value) {
        setAttributeInternal(TOTALOVERTIMEHOURS, value);
    }

    /**
     * Gets the attribute value for Amount, using the alias name Amount.
     * @return the value of Amount
     */
    public BigDecimal getAmount() {
        return (BigDecimal) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amount.
     * @param value value to set the Amount
     */
    public void setAmount(BigDecimal value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for Bill, using the alias name Bill.
     * @return the value of Bill
     */
    public String getBill() {
        return (String) getAttributeInternal(BILL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Bill.
     * @param value value to set the Bill
     */
    public void setBill(String value) {
        setAttributeInternal(BILL, value);
    }

    /**
     * Gets the attribute value for Netamount, using the alias name Netamount.
     * @return the value of Netamount
     */
    public BigDecimal getNetamount() {
        return (BigDecimal) getAttributeInternal(NETAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Netamount.
     * @param value value to set the Netamount
     */
    public void setNetamount(BigDecimal value) {
        setAttributeInternal(NETAMOUNT, value);
    }

    /**
     * @return the associated entity Subcon_Rate_Hdr_EOImpl.
     */
    public Subcon_Rate_Hdr_EOImpl getSubcon_Rate_Hdr_EO() {
        return (Subcon_Rate_Hdr_EOImpl) getAttributeInternal(SUBCON_RATE_HDR_EO);
    }

    /**
     * Sets <code>value</code> as the associated entity Subcon_Rate_Hdr_EOImpl.
     */
    public void setSubcon_Rate_Hdr_EO(Subcon_Rate_Hdr_EOImpl value) {
        setAttributeInternal(SUBCON_RATE_HDR_EO, value);
    }


    /**
     * @param subconRateDtlId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal subconRateDtlId) {
        return new Key(new Object[] { subconRateDtlId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        SequenceImpl seq = new SequenceImpl("XXSC_SUBCON_RATE_DTL_S", this.getDBTransaction());
               this.setSubconRateDtlId(seq.getSequenceNumber().bigDecimalValue());
       
        super.create(attributeList);
    }
}

