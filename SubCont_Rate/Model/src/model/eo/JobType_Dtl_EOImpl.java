package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 22 19:18:41 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobType_Dtl_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        JobTypeDtlId,
        JobTypeHdrId,
        JobTypeRate,
        OvertimeRate,
        IncentiveRate,
        EffectiveStartDate,
        EffectiveEndDate,
        CurrentRecordFlag,
        ActiveFlag,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        EmployeeId,
        EmployeeName,
        EmployeeNumber,
        JobType_Hdr_EO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    @Override
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }


    public static final int JOBTYPEDTLID = AttributesEnum.JobTypeDtlId.index();
    public static final int JOBTYPEHDRID = AttributesEnum.JobTypeHdrId.index();
    public static final int JOBTYPERATE = AttributesEnum.JobTypeRate.index();
    public static final int OVERTIMERATE = AttributesEnum.OvertimeRate.index();
    public static final int INCENTIVERATE = AttributesEnum.IncentiveRate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int CURRENTRECORDFLAG = AttributesEnum.CurrentRecordFlag.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int EMPLOYEENAME = AttributesEnum.EmployeeName.index();
    public static final int EMPLOYEENUMBER = AttributesEnum.EmployeeNumber.index();
    public static final int JOBTYPE_HDR_EO = AttributesEnum.JobType_Hdr_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobType_Dtl_EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.JobType_Dtl_EO");
    }


    /**
     * Gets the attribute value for JobTypeDtlId, using the alias name JobTypeDtlId.
     * @return the value of JobTypeDtlId
     */
    public BigDecimal getJobTypeDtlId() {
        return (BigDecimal) getAttributeInternal(JOBTYPEDTLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTypeDtlId.
     * @param value value to set the JobTypeDtlId
     */
    public void setJobTypeDtlId(BigDecimal value) {
        setAttributeInternal(JOBTYPEDTLID, value);
    }

    /**
     * Gets the attribute value for JobTypeHdrId, using the alias name JobTypeHdrId.
     * @return the value of JobTypeHdrId
     */
    public BigDecimal getJobTypeHdrId() {
        return (BigDecimal) getAttributeInternal(JOBTYPEHDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTypeHdrId.
     * @param value value to set the JobTypeHdrId
     */
    public void setJobTypeHdrId(BigDecimal value) {
        setAttributeInternal(JOBTYPEHDRID, value);
    }


    /**
     * Gets the attribute value for JobTypeRate, using the alias name JobTypeRate.
     * @return the value of JobTypeRate
     */
    public BigDecimal getJobTypeRate() {
        return (BigDecimal) getAttributeInternal(JOBTYPERATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTypeRate.
     * @param value value to set the JobTypeRate
     */
    public void setJobTypeRate(BigDecimal value) {
        setAttributeInternal(JOBTYPERATE, value);
    }

    /**
     * Gets the attribute value for OvertimeRate, using the alias name OvertimeRate.
     * @return the value of OvertimeRate
     */
    public BigDecimal getOvertimeRate() {
        return (BigDecimal) getAttributeInternal(OVERTIMERATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OvertimeRate.
     * @param value value to set the OvertimeRate
     */
    public void setOvertimeRate(BigDecimal value) {
        setAttributeInternal(OVERTIMERATE, value);
    }

    /**
     * Gets the attribute value for IncentiveRate, using the alias name IncentiveRate.
     * @return the value of IncentiveRate
     */
    public BigDecimal getIncentiveRate() {
        return (BigDecimal) getAttributeInternal(INCENTIVERATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IncentiveRate.
     * @param value value to set the IncentiveRate
     */
    public void setIncentiveRate(BigDecimal value) {
        setAttributeInternal(INCENTIVERATE, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the value of EffectiveStartDate
     */
    public Timestamp getEffectiveStartDate() {
        return (Timestamp) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Timestamp value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the value of EffectiveEndDate
     */
    public Timestamp getEffectiveEndDate() {
        return (Timestamp) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Timestamp value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for CurrentRecordFlag, using the alias name CurrentRecordFlag.
     * @return the value of CurrentRecordFlag
     */
    public String getCurrentRecordFlag() {
        return (String) getAttributeInternal(CURRENTRECORDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentRecordFlag.
     * @param value value to set the CurrentRecordFlag
     */
    public void setCurrentRecordFlag(String value) {
        setAttributeInternal(CURRENTRECORDFLAG, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the value of ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }


    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public BigDecimal getEmployeeId() {
        return (BigDecimal) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(BigDecimal value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for EmployeeName, using the alias name EmployeeName.
     * @return the value of EmployeeName
     */
    public String getEmployeeName() {
        return (String) getAttributeInternal(EMPLOYEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeName.
     * @param value value to set the EmployeeName
     */
    public void setEmployeeName(String value) {
        setAttributeInternal(EMPLOYEENAME, value);
    }

    /**
     * Gets the attribute value for EmployeeNumber, using the alias name EmployeeNumber.
     * @return the value of EmployeeNumber
     */
    public String getEmployeeNumber() {
        return (String) getAttributeInternal(EMPLOYEENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeNumber.
     * @param value value to set the EmployeeNumber
     */
    public void setEmployeeNumber(String value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**
     * @return the associated entity JobType_Hdr_EOImpl.
     */
    public JobType_Hdr_EOImpl getJobType_Hdr_EO() {
        return (JobType_Hdr_EOImpl) getAttributeInternal(JOBTYPE_HDR_EO);
    }

    /**
     * Sets <code>value</code> as the associated entity JobType_Hdr_EOImpl.
     */
    public void setJobType_Hdr_EO(JobType_Hdr_EOImpl value) {
        setAttributeInternal(JOBTYPE_HDR_EO, value);
    }


    /**
     * @param jobTypeDtlId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal jobTypeDtlId) {
        return new Key(new Object[] { jobTypeDtlId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        SequenceImpl seq = new SequenceImpl("XXSC_JOB_TYPE_DTL_S", this.getDBTransaction());
              this.setJobTypeDtlId(seq.getSequenceNumber().bigDecimalValue());
        
        super.create(attributeList);
    }
}

